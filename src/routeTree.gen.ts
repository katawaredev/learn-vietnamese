/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ShowcaseRouteImport } from './routes/showcase'
import { Route as FlagRouteImport } from './routes/flag'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RelationsIndexRouteImport } from './routes/relations/index'
import { Route as PronunciationIndexRouteImport } from './routes/pronunciation/index'
import { Route as NumbersIndexRouteImport } from './routes/numbers/index'
import { Route as RelationsPronounsRouteImport } from './routes/relations/pronouns'
import { Route as RelationsPracticeRouteImport } from './routes/relations/practice'
import { Route as PronunciationVowelsRouteImport } from './routes/pronunciation/vowels'
import { Route as PronunciationTonesVowelRouteImport } from './routes/pronunciation/tones-vowel'
import { Route as PronunciationTonesRouteImport } from './routes/pronunciation/tones'
import { Route as PronunciationPracticeRouteImport } from './routes/pronunciation/practice'
import { Route as PronunciationDoubleVowelsRouteImport } from './routes/pronunciation/double-vowels'
import { Route as PronunciationConsonantsRouteImport } from './routes/pronunciation/consonants'
import { Route as NumbersPracticeRouteImport } from './routes/numbers/practice'
import { Route as NumbersCountingRouteImport } from './routes/numbers/counting'

const ShowcaseRoute = ShowcaseRouteImport.update({
  id: '/showcase',
  path: '/showcase',
  getParentRoute: () => rootRouteImport,
} as any)
const FlagRoute = FlagRouteImport.update({
  id: '/flag',
  path: '/flag',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RelationsIndexRoute = RelationsIndexRouteImport.update({
  id: '/relations/',
  path: '/relations/',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationIndexRoute = PronunciationIndexRouteImport.update({
  id: '/pronunciation/',
  path: '/pronunciation/',
  getParentRoute: () => rootRouteImport,
} as any)
const NumbersIndexRoute = NumbersIndexRouteImport.update({
  id: '/numbers/',
  path: '/numbers/',
  getParentRoute: () => rootRouteImport,
} as any)
const RelationsPronounsRoute = RelationsPronounsRouteImport.update({
  id: '/relations/pronouns',
  path: '/relations/pronouns',
  getParentRoute: () => rootRouteImport,
} as any)
const RelationsPracticeRoute = RelationsPracticeRouteImport.update({
  id: '/relations/practice',
  path: '/relations/practice',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationVowelsRoute = PronunciationVowelsRouteImport.update({
  id: '/pronunciation/vowels',
  path: '/pronunciation/vowels',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationTonesVowelRoute = PronunciationTonesVowelRouteImport.update({
  id: '/pronunciation/tones-vowel',
  path: '/pronunciation/tones-vowel',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationTonesRoute = PronunciationTonesRouteImport.update({
  id: '/pronunciation/tones',
  path: '/pronunciation/tones',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationPracticeRoute = PronunciationPracticeRouteImport.update({
  id: '/pronunciation/practice',
  path: '/pronunciation/practice',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationDoubleVowelsRoute =
  PronunciationDoubleVowelsRouteImport.update({
    id: '/pronunciation/double-vowels',
    path: '/pronunciation/double-vowels',
    getParentRoute: () => rootRouteImport,
  } as any)
const PronunciationConsonantsRoute = PronunciationConsonantsRouteImport.update({
  id: '/pronunciation/consonants',
  path: '/pronunciation/consonants',
  getParentRoute: () => rootRouteImport,
} as any)
const NumbersPracticeRoute = NumbersPracticeRouteImport.update({
  id: '/numbers/practice',
  path: '/numbers/practice',
  getParentRoute: () => rootRouteImport,
} as any)
const NumbersCountingRoute = NumbersCountingRouteImport.update({
  id: '/numbers/counting',
  path: '/numbers/counting',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/flag': typeof FlagRoute
  '/showcase': typeof ShowcaseRoute
  '/numbers/counting': typeof NumbersCountingRoute
  '/numbers/practice': typeof NumbersPracticeRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/practice': typeof PronunciationPracticeRoute
  '/pronunciation/tones': typeof PronunciationTonesRoute
  '/pronunciation/tones-vowel': typeof PronunciationTonesVowelRoute
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/relations/practice': typeof RelationsPracticeRoute
  '/relations/pronouns': typeof RelationsPronounsRoute
  '/numbers': typeof NumbersIndexRoute
  '/pronunciation': typeof PronunciationIndexRoute
  '/relations': typeof RelationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/flag': typeof FlagRoute
  '/showcase': typeof ShowcaseRoute
  '/numbers/counting': typeof NumbersCountingRoute
  '/numbers/practice': typeof NumbersPracticeRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/practice': typeof PronunciationPracticeRoute
  '/pronunciation/tones': typeof PronunciationTonesRoute
  '/pronunciation/tones-vowel': typeof PronunciationTonesVowelRoute
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/relations/practice': typeof RelationsPracticeRoute
  '/relations/pronouns': typeof RelationsPronounsRoute
  '/numbers': typeof NumbersIndexRoute
  '/pronunciation': typeof PronunciationIndexRoute
  '/relations': typeof RelationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/flag': typeof FlagRoute
  '/showcase': typeof ShowcaseRoute
  '/numbers/counting': typeof NumbersCountingRoute
  '/numbers/practice': typeof NumbersPracticeRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/practice': typeof PronunciationPracticeRoute
  '/pronunciation/tones': typeof PronunciationTonesRoute
  '/pronunciation/tones-vowel': typeof PronunciationTonesVowelRoute
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/relations/practice': typeof RelationsPracticeRoute
  '/relations/pronouns': typeof RelationsPronounsRoute
  '/numbers/': typeof NumbersIndexRoute
  '/pronunciation/': typeof PronunciationIndexRoute
  '/relations/': typeof RelationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/flag'
    | '/showcase'
    | '/numbers/counting'
    | '/numbers/practice'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/practice'
    | '/pronunciation/tones'
    | '/pronunciation/tones-vowel'
    | '/pronunciation/vowels'
    | '/relations/practice'
    | '/relations/pronouns'
    | '/numbers'
    | '/pronunciation'
    | '/relations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/flag'
    | '/showcase'
    | '/numbers/counting'
    | '/numbers/practice'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/practice'
    | '/pronunciation/tones'
    | '/pronunciation/tones-vowel'
    | '/pronunciation/vowels'
    | '/relations/practice'
    | '/relations/pronouns'
    | '/numbers'
    | '/pronunciation'
    | '/relations'
  id:
    | '__root__'
    | '/'
    | '/flag'
    | '/showcase'
    | '/numbers/counting'
    | '/numbers/practice'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/practice'
    | '/pronunciation/tones'
    | '/pronunciation/tones-vowel'
    | '/pronunciation/vowels'
    | '/relations/practice'
    | '/relations/pronouns'
    | '/numbers/'
    | '/pronunciation/'
    | '/relations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FlagRoute: typeof FlagRoute
  ShowcaseRoute: typeof ShowcaseRoute
  NumbersCountingRoute: typeof NumbersCountingRoute
  NumbersPracticeRoute: typeof NumbersPracticeRoute
  PronunciationConsonantsRoute: typeof PronunciationConsonantsRoute
  PronunciationDoubleVowelsRoute: typeof PronunciationDoubleVowelsRoute
  PronunciationPracticeRoute: typeof PronunciationPracticeRoute
  PronunciationTonesRoute: typeof PronunciationTonesRoute
  PronunciationTonesVowelRoute: typeof PronunciationTonesVowelRoute
  PronunciationVowelsRoute: typeof PronunciationVowelsRoute
  RelationsPracticeRoute: typeof RelationsPracticeRoute
  RelationsPronounsRoute: typeof RelationsPronounsRoute
  NumbersIndexRoute: typeof NumbersIndexRoute
  PronunciationIndexRoute: typeof PronunciationIndexRoute
  RelationsIndexRoute: typeof RelationsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/showcase': {
      id: '/showcase'
      path: '/showcase'
      fullPath: '/showcase'
      preLoaderRoute: typeof ShowcaseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/flag': {
      id: '/flag'
      path: '/flag'
      fullPath: '/flag'
      preLoaderRoute: typeof FlagRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/relations/': {
      id: '/relations/'
      path: '/relations'
      fullPath: '/relations'
      preLoaderRoute: typeof RelationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/': {
      id: '/pronunciation/'
      path: '/pronunciation'
      fullPath: '/pronunciation'
      preLoaderRoute: typeof PronunciationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/numbers/': {
      id: '/numbers/'
      path: '/numbers'
      fullPath: '/numbers'
      preLoaderRoute: typeof NumbersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/relations/pronouns': {
      id: '/relations/pronouns'
      path: '/relations/pronouns'
      fullPath: '/relations/pronouns'
      preLoaderRoute: typeof RelationsPronounsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/relations/practice': {
      id: '/relations/practice'
      path: '/relations/practice'
      fullPath: '/relations/practice'
      preLoaderRoute: typeof RelationsPracticeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/vowels': {
      id: '/pronunciation/vowels'
      path: '/pronunciation/vowels'
      fullPath: '/pronunciation/vowels'
      preLoaderRoute: typeof PronunciationVowelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/tones-vowel': {
      id: '/pronunciation/tones-vowel'
      path: '/pronunciation/tones-vowel'
      fullPath: '/pronunciation/tones-vowel'
      preLoaderRoute: typeof PronunciationTonesVowelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/tones': {
      id: '/pronunciation/tones'
      path: '/pronunciation/tones'
      fullPath: '/pronunciation/tones'
      preLoaderRoute: typeof PronunciationTonesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/practice': {
      id: '/pronunciation/practice'
      path: '/pronunciation/practice'
      fullPath: '/pronunciation/practice'
      preLoaderRoute: typeof PronunciationPracticeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/double-vowels': {
      id: '/pronunciation/double-vowels'
      path: '/pronunciation/double-vowels'
      fullPath: '/pronunciation/double-vowels'
      preLoaderRoute: typeof PronunciationDoubleVowelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/consonants': {
      id: '/pronunciation/consonants'
      path: '/pronunciation/consonants'
      fullPath: '/pronunciation/consonants'
      preLoaderRoute: typeof PronunciationConsonantsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/numbers/practice': {
      id: '/numbers/practice'
      path: '/numbers/practice'
      fullPath: '/numbers/practice'
      preLoaderRoute: typeof NumbersPracticeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/numbers/counting': {
      id: '/numbers/counting'
      path: '/numbers/counting'
      fullPath: '/numbers/counting'
      preLoaderRoute: typeof NumbersCountingRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FlagRoute: FlagRoute,
  ShowcaseRoute: ShowcaseRoute,
  NumbersCountingRoute: NumbersCountingRoute,
  NumbersPracticeRoute: NumbersPracticeRoute,
  PronunciationConsonantsRoute: PronunciationConsonantsRoute,
  PronunciationDoubleVowelsRoute: PronunciationDoubleVowelsRoute,
  PronunciationPracticeRoute: PronunciationPracticeRoute,
  PronunciationTonesRoute: PronunciationTonesRoute,
  PronunciationTonesVowelRoute: PronunciationTonesVowelRoute,
  PronunciationVowelsRoute: PronunciationVowelsRoute,
  RelationsPracticeRoute: RelationsPracticeRoute,
  RelationsPronounsRoute: RelationsPronounsRoute,
  NumbersIndexRoute: NumbersIndexRoute,
  PronunciationIndexRoute: PronunciationIndexRoute,
  RelationsIndexRoute: RelationsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
