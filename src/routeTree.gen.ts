/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PronunciationIndexRouteImport } from './routes/pronunciation/index'
import { Route as PronunciationVowelsRouteImport } from './routes/pronunciation/vowels'
import { Route as PronunciationTonesRouteImport } from './routes/pronunciation/tones'
import { Route as PronunciationDoubleVowelsRouteImport } from './routes/pronunciation/double-vowels'
import { Route as PronunciationConsonantsRouteImport } from './routes/pronunciation/consonants'
import { Route as PronunciationTonesIndexRouteImport } from './routes/pronunciation/tones/index'
import { Route as PronunciationTonesRisingRouteImport } from './routes/pronunciation/tones/rising'
import { Route as PronunciationTonesHeavyRouteImport } from './routes/pronunciation/tones/heavy'
import { Route as PronunciationTonesFlatRouteImport } from './routes/pronunciation/tones/flat'
import { Route as PronunciationTonesFallingRouteImport } from './routes/pronunciation/tones/falling'
import { Route as PronunciationTonesDippingRisingRouteImport } from './routes/pronunciation/tones/dipping-rising'
import { Route as PronunciationTonesCreakyRisingRouteImport } from './routes/pronunciation/tones/creaky-rising'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationIndexRoute = PronunciationIndexRouteImport.update({
  id: '/pronunciation/',
  path: '/pronunciation/',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationVowelsRoute = PronunciationVowelsRouteImport.update({
  id: '/pronunciation/vowels',
  path: '/pronunciation/vowels',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationTonesRoute = PronunciationTonesRouteImport.update({
  id: '/pronunciation/tones',
  path: '/pronunciation/tones',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationDoubleVowelsRoute =
  PronunciationDoubleVowelsRouteImport.update({
    id: '/pronunciation/double-vowels',
    path: '/pronunciation/double-vowels',
    getParentRoute: () => rootRouteImport,
  } as any)
const PronunciationConsonantsRoute = PronunciationConsonantsRouteImport.update({
  id: '/pronunciation/consonants',
  path: '/pronunciation/consonants',
  getParentRoute: () => rootRouteImport,
} as any)
const PronunciationTonesIndexRoute = PronunciationTonesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PronunciationTonesRoute,
} as any)
const PronunciationTonesRisingRoute =
  PronunciationTonesRisingRouteImport.update({
    id: '/rising',
    path: '/rising',
    getParentRoute: () => PronunciationTonesRoute,
  } as any)
const PronunciationTonesHeavyRoute = PronunciationTonesHeavyRouteImport.update({
  id: '/heavy',
  path: '/heavy',
  getParentRoute: () => PronunciationTonesRoute,
} as any)
const PronunciationTonesFlatRoute = PronunciationTonesFlatRouteImport.update({
  id: '/flat',
  path: '/flat',
  getParentRoute: () => PronunciationTonesRoute,
} as any)
const PronunciationTonesFallingRoute =
  PronunciationTonesFallingRouteImport.update({
    id: '/falling',
    path: '/falling',
    getParentRoute: () => PronunciationTonesRoute,
  } as any)
const PronunciationTonesDippingRisingRoute =
  PronunciationTonesDippingRisingRouteImport.update({
    id: '/dipping-rising',
    path: '/dipping-rising',
    getParentRoute: () => PronunciationTonesRoute,
  } as any)
const PronunciationTonesCreakyRisingRoute =
  PronunciationTonesCreakyRisingRouteImport.update({
    id: '/creaky-rising',
    path: '/creaky-rising',
    getParentRoute: () => PronunciationTonesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/tones': typeof PronunciationTonesRouteWithChildren
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/pronunciation': typeof PronunciationIndexRoute
  '/pronunciation/tones/creaky-rising': typeof PronunciationTonesCreakyRisingRoute
  '/pronunciation/tones/dipping-rising': typeof PronunciationTonesDippingRisingRoute
  '/pronunciation/tones/falling': typeof PronunciationTonesFallingRoute
  '/pronunciation/tones/flat': typeof PronunciationTonesFlatRoute
  '/pronunciation/tones/heavy': typeof PronunciationTonesHeavyRoute
  '/pronunciation/tones/rising': typeof PronunciationTonesRisingRoute
  '/pronunciation/tones/': typeof PronunciationTonesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/pronunciation': typeof PronunciationIndexRoute
  '/pronunciation/tones/creaky-rising': typeof PronunciationTonesCreakyRisingRoute
  '/pronunciation/tones/dipping-rising': typeof PronunciationTonesDippingRisingRoute
  '/pronunciation/tones/falling': typeof PronunciationTonesFallingRoute
  '/pronunciation/tones/flat': typeof PronunciationTonesFlatRoute
  '/pronunciation/tones/heavy': typeof PronunciationTonesHeavyRoute
  '/pronunciation/tones/rising': typeof PronunciationTonesRisingRoute
  '/pronunciation/tones': typeof PronunciationTonesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/pronunciation/consonants': typeof PronunciationConsonantsRoute
  '/pronunciation/double-vowels': typeof PronunciationDoubleVowelsRoute
  '/pronunciation/tones': typeof PronunciationTonesRouteWithChildren
  '/pronunciation/vowels': typeof PronunciationVowelsRoute
  '/pronunciation/': typeof PronunciationIndexRoute
  '/pronunciation/tones/creaky-rising': typeof PronunciationTonesCreakyRisingRoute
  '/pronunciation/tones/dipping-rising': typeof PronunciationTonesDippingRisingRoute
  '/pronunciation/tones/falling': typeof PronunciationTonesFallingRoute
  '/pronunciation/tones/flat': typeof PronunciationTonesFlatRoute
  '/pronunciation/tones/heavy': typeof PronunciationTonesHeavyRoute
  '/pronunciation/tones/rising': typeof PronunciationTonesRisingRoute
  '/pronunciation/tones/': typeof PronunciationTonesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/tones'
    | '/pronunciation/vowels'
    | '/pronunciation'
    | '/pronunciation/tones/creaky-rising'
    | '/pronunciation/tones/dipping-rising'
    | '/pronunciation/tones/falling'
    | '/pronunciation/tones/flat'
    | '/pronunciation/tones/heavy'
    | '/pronunciation/tones/rising'
    | '/pronunciation/tones/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/vowels'
    | '/pronunciation'
    | '/pronunciation/tones/creaky-rising'
    | '/pronunciation/tones/dipping-rising'
    | '/pronunciation/tones/falling'
    | '/pronunciation/tones/flat'
    | '/pronunciation/tones/heavy'
    | '/pronunciation/tones/rising'
    | '/pronunciation/tones'
  id:
    | '__root__'
    | '/'
    | '/pronunciation/consonants'
    | '/pronunciation/double-vowels'
    | '/pronunciation/tones'
    | '/pronunciation/vowels'
    | '/pronunciation/'
    | '/pronunciation/tones/creaky-rising'
    | '/pronunciation/tones/dipping-rising'
    | '/pronunciation/tones/falling'
    | '/pronunciation/tones/flat'
    | '/pronunciation/tones/heavy'
    | '/pronunciation/tones/rising'
    | '/pronunciation/tones/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PronunciationConsonantsRoute: typeof PronunciationConsonantsRoute
  PronunciationDoubleVowelsRoute: typeof PronunciationDoubleVowelsRoute
  PronunciationTonesRoute: typeof PronunciationTonesRouteWithChildren
  PronunciationVowelsRoute: typeof PronunciationVowelsRoute
  PronunciationIndexRoute: typeof PronunciationIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/': {
      id: '/pronunciation/'
      path: '/pronunciation'
      fullPath: '/pronunciation'
      preLoaderRoute: typeof PronunciationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/vowels': {
      id: '/pronunciation/vowels'
      path: '/pronunciation/vowels'
      fullPath: '/pronunciation/vowels'
      preLoaderRoute: typeof PronunciationVowelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/tones': {
      id: '/pronunciation/tones'
      path: '/pronunciation/tones'
      fullPath: '/pronunciation/tones'
      preLoaderRoute: typeof PronunciationTonesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/double-vowels': {
      id: '/pronunciation/double-vowels'
      path: '/pronunciation/double-vowels'
      fullPath: '/pronunciation/double-vowels'
      preLoaderRoute: typeof PronunciationDoubleVowelsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/consonants': {
      id: '/pronunciation/consonants'
      path: '/pronunciation/consonants'
      fullPath: '/pronunciation/consonants'
      preLoaderRoute: typeof PronunciationConsonantsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pronunciation/tones/': {
      id: '/pronunciation/tones/'
      path: '/'
      fullPath: '/pronunciation/tones/'
      preLoaderRoute: typeof PronunciationTonesIndexRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/rising': {
      id: '/pronunciation/tones/rising'
      path: '/rising'
      fullPath: '/pronunciation/tones/rising'
      preLoaderRoute: typeof PronunciationTonesRisingRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/heavy': {
      id: '/pronunciation/tones/heavy'
      path: '/heavy'
      fullPath: '/pronunciation/tones/heavy'
      preLoaderRoute: typeof PronunciationTonesHeavyRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/flat': {
      id: '/pronunciation/tones/flat'
      path: '/flat'
      fullPath: '/pronunciation/tones/flat'
      preLoaderRoute: typeof PronunciationTonesFlatRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/falling': {
      id: '/pronunciation/tones/falling'
      path: '/falling'
      fullPath: '/pronunciation/tones/falling'
      preLoaderRoute: typeof PronunciationTonesFallingRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/dipping-rising': {
      id: '/pronunciation/tones/dipping-rising'
      path: '/dipping-rising'
      fullPath: '/pronunciation/tones/dipping-rising'
      preLoaderRoute: typeof PronunciationTonesDippingRisingRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
    '/pronunciation/tones/creaky-rising': {
      id: '/pronunciation/tones/creaky-rising'
      path: '/creaky-rising'
      fullPath: '/pronunciation/tones/creaky-rising'
      preLoaderRoute: typeof PronunciationTonesCreakyRisingRouteImport
      parentRoute: typeof PronunciationTonesRoute
    }
  }
}

interface PronunciationTonesRouteChildren {
  PronunciationTonesCreakyRisingRoute: typeof PronunciationTonesCreakyRisingRoute
  PronunciationTonesDippingRisingRoute: typeof PronunciationTonesDippingRisingRoute
  PronunciationTonesFallingRoute: typeof PronunciationTonesFallingRoute
  PronunciationTonesFlatRoute: typeof PronunciationTonesFlatRoute
  PronunciationTonesHeavyRoute: typeof PronunciationTonesHeavyRoute
  PronunciationTonesRisingRoute: typeof PronunciationTonesRisingRoute
  PronunciationTonesIndexRoute: typeof PronunciationTonesIndexRoute
}

const PronunciationTonesRouteChildren: PronunciationTonesRouteChildren = {
  PronunciationTonesCreakyRisingRoute: PronunciationTonesCreakyRisingRoute,
  PronunciationTonesDippingRisingRoute: PronunciationTonesDippingRisingRoute,
  PronunciationTonesFallingRoute: PronunciationTonesFallingRoute,
  PronunciationTonesFlatRoute: PronunciationTonesFlatRoute,
  PronunciationTonesHeavyRoute: PronunciationTonesHeavyRoute,
  PronunciationTonesRisingRoute: PronunciationTonesRisingRoute,
  PronunciationTonesIndexRoute: PronunciationTonesIndexRoute,
}

const PronunciationTonesRouteWithChildren =
  PronunciationTonesRoute._addFileChildren(PronunciationTonesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PronunciationConsonantsRoute: PronunciationConsonantsRoute,
  PronunciationDoubleVowelsRoute: PronunciationDoubleVowelsRoute,
  PronunciationTonesRoute: PronunciationTonesRouteWithChildren,
  PronunciationVowelsRoute: PronunciationVowelsRoute,
  PronunciationIndexRoute: PronunciationIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
